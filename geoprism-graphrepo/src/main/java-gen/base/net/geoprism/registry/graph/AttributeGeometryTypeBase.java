package net.geoprism.registry.graph;

@com.runwaysdk.business.ClassSignature(hash = 760690762)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to AttributeGeometryType.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class AttributeGeometryTypeBase extends net.geoprism.registry.graph.AttributeType
{
  public final static String CLASS = "net.geoprism.registry.graph.AttributeGeometryType";
  public final static java.lang.String GEOMETRYTYPE = "geometryType";
  @SuppressWarnings("unused")
  private static final long serialVersionUID = 760690762;
  
  public AttributeGeometryTypeBase()
  {
    super();
  }
  
  public String getGeometryType()
  {
    return (String) this.getObjectValue(GEOMETRYTYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getGeometryTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.AttributeGeometryType.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(GEOMETRYTYPE);
  }
  
  public void setGeometryType(String value)
  {
    this.setValue(GEOMETRYTYPE, value);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static AttributeGeometryType get(String oid)
  {
    return (AttributeGeometryType) com.runwaysdk.business.graph.VertexObject.get(CLASS, oid);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}

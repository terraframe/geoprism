/**
 * Copyright (c) 2022 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Geoprism Registry(tm).
 *
 * Geoprism Registry(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Geoprism Registry(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Geoprism Registry(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package net.geoprism.registry;

@com.runwaysdk.business.ClassSignature(hash = -1850527562)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to HierarchicalRelationshipType.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class HierarchicalRelationshipTypeQuery extends com.runwaysdk.query.GeneratedBusinessQuery

{

  public HierarchicalRelationshipTypeQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public HierarchicalRelationshipTypeQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
     super();
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return net.geoprism.registry.HierarchicalRelationshipType.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getAbstractDescription()
  {
    return getAbstractDescription(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAbstractDescription(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.ABSTRACTDESCRIPTION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAbstractDescription(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.ABSTRACTDESCRIPTION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getAccessConstraints()
  {
    return getAccessConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.ACCESSCONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.ACCESSCONSTRAINTS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getAcknowledgement()
  {
    return getAcknowledgement(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.ACKNOWLEDGEMENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.ACKNOWLEDGEMENT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCode()
  {
    return getCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.CODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.CODE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getContact()
  {
    return getContact(null);

  }
 
  public com.runwaysdk.query.SelectableChar getContact(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.CONTACT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getContact(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.CONTACT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription()
  {
    return getDescription(null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION);

    return (net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION);

    return (net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getDisclaimer()
  {
    return getDisclaimer(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.DISCLAIMER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.DISCLAIMER, alias, displayLabel);

  }
  public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL);

    return (net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL);

    return (net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getEmail()
  {
    return getEmail(null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.EMAIL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.EMAIL, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN);

    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY);

    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge()
  {
    return getMdEdge(null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE);

    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE);

    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship()
  {
    return getMdTermRelationship(null);

  }
 
  public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP);

    return (com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP);

    return (com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.OID, alias, displayLabel);

  }
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization()
  {
    return getOrganization(null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION);

    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION);

    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.OWNER, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.registry.HierarchicalRelationshipType.OWNER);

    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.registry.HierarchicalRelationshipType.OWNER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPhoneNumber()
  {
    return getPhoneNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.PHONENUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.PHONENUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProgress()
  {
    return getProgress(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.PROGRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.PROGRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUseConstraints()
  {
    return getUseConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.USECONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.registry.HierarchicalRelationshipType.USECONSTRAINTS, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE)) 
    {
       return new com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP)) 
    {
       return new com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION)) 
    {
       return new net.geoprism.registry.OrganizationQuery.OrganizationQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION)) 
    {
       return new net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL)) 
    {
       return new net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends HierarchicalRelationshipType> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<HierarchicalRelationshipType>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface HierarchicalRelationshipTypeQueryReferenceIF extends com.runwaysdk.query.SelectableReference
  {

    public com.runwaysdk.query.SelectableChar getAbstractDescription();
    public com.runwaysdk.query.SelectableChar getAbstractDescription(String alias);
    public com.runwaysdk.query.SelectableChar getAbstractDescription(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getAccessConstraints();
    public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias);
    public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getAcknowledgement();
    public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias);
    public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getCode();
    public com.runwaysdk.query.SelectableChar getCode(String alias);
    public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getContact();
    public com.runwaysdk.query.SelectableChar getContact(String alias);
    public com.runwaysdk.query.SelectableChar getContact(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription();
    public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription(String alias);
    public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getDisclaimer();
    public com.runwaysdk.query.SelectableChar getDisclaimer(String alias);
    public com.runwaysdk.query.SelectableChar getDisclaimer(String alias, String displayLabel);
    public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel();
    public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getEmail();
    public com.runwaysdk.query.SelectableChar getEmail(String alias);
    public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge();
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge(String alias);
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship();
    public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship(String alias);
    public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getOid();
    public com.runwaysdk.query.SelectableUUID getOid(String alias);
    public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel);
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization();
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias);
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getPhoneNumber();
    public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias);
    public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getProgress();
    public com.runwaysdk.query.SelectableChar getProgress(String alias);
    public com.runwaysdk.query.SelectableChar getProgress(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getUseConstraints();
    public com.runwaysdk.query.SelectableChar getUseConstraints(String alias);
    public com.runwaysdk.query.SelectableChar getUseConstraints(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(net.geoprism.registry.HierarchicalRelationshipType hierarchicalRelationshipType);

    public com.runwaysdk.query.BasicCondition NE(net.geoprism.registry.HierarchicalRelationshipType hierarchicalRelationshipType);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class HierarchicalRelationshipTypeQueryReference extends com.runwaysdk.query.AttributeReference
 implements HierarchicalRelationshipTypeQueryReferenceIF

  {

  public HierarchicalRelationshipTypeQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(net.geoprism.registry.HierarchicalRelationshipType hierarchicalRelationshipType)
    {
      if(hierarchicalRelationshipType == null) return this.EQ((java.lang.String)null);
      return this.EQ(hierarchicalRelationshipType.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(net.geoprism.registry.HierarchicalRelationshipType hierarchicalRelationshipType)
    {
      if(hierarchicalRelationshipType == null) return this.NE((java.lang.String)null);
      return this.NE(hierarchicalRelationshipType.getOid());
    }

  public com.runwaysdk.query.SelectableChar getAbstractDescription()
  {
    return getAbstractDescription(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAbstractDescription(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ABSTRACTDESCRIPTION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAbstractDescription(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ABSTRACTDESCRIPTION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getAccessConstraints()
  {
    return getAccessConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ACCESSCONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ACCESSCONSTRAINTS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getAcknowledgement()
  {
    return getAcknowledgement(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ACKNOWLEDGEMENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ACKNOWLEDGEMENT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCode()
  {
    return getCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.CODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.CODE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getContact()
  {
    return getContact(null);

  }
 
  public com.runwaysdk.query.SelectableChar getContact(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.CONTACT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getContact(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.CONTACT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.HierarchicalRelationshipType.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.HierarchicalRelationshipType.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY,  alias, displayLabel);

  }
  public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription()
  {
    return getDescription(null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription(String alias)
  {
    return (net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription(String alias, String displayLabel)
  {
    return (net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getDisclaimer()
  {
    return getDisclaimer(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.DISCLAIMER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.DISCLAIMER, alias, displayLabel);

  }
  public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getEmail()
  {
    return getEmail(null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.EMAIL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.EMAIL, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge()
  {
    return getMdEdge(null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge(String alias)
  {
    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship()
  {
    return getMdTermRelationship(null);

  }
 
  public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship(String alias)
  {
    return (com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.HierarchicalRelationshipType.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.HierarchicalRelationshipType.OID, alias, displayLabel);

  }
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization()
  {
    return getOrganization(null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias)
  {
    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION, alias, null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias, String displayLabel)
  {
    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION,  alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPhoneNumber()
  {
    return getPhoneNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.PHONENUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.PHONENUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProgress()
  {
    return getProgress(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.PROGRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.PROGRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.HierarchicalRelationshipType.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.HierarchicalRelationshipType.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUseConstraints()
  {
    return getUseConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.USECONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.USECONSTRAINTS, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE)) 
    {
       return new com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP)) 
    {
       return new com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION)) 
    {
       return new net.geoprism.registry.OrganizationQuery.OrganizationQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION)) 
    {
       return new net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL)) 
    {
       return new net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface HierarchicalRelationshipTypeQueryMultiReferenceIF extends com.runwaysdk.query.SelectableMultiReference
  {

    public com.runwaysdk.query.SelectableChar getAbstractDescription();
    public com.runwaysdk.query.SelectableChar getAbstractDescription(String alias);
    public com.runwaysdk.query.SelectableChar getAbstractDescription(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getAccessConstraints();
    public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias);
    public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getAcknowledgement();
    public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias);
    public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getCode();
    public com.runwaysdk.query.SelectableChar getCode(String alias);
    public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getContact();
    public com.runwaysdk.query.SelectableChar getContact(String alias);
    public com.runwaysdk.query.SelectableChar getContact(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getCreateDate();
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel);
    public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription();
    public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription(String alias);
    public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getDisclaimer();
    public com.runwaysdk.query.SelectableChar getDisclaimer(String alias);
    public com.runwaysdk.query.SelectableChar getDisclaimer(String alias, String displayLabel);
    public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel();
    public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getEmail();
    public com.runwaysdk.query.SelectableChar getEmail(String alias);
    public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain();
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias);
    public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getKeyName();
    public com.runwaysdk.query.SelectableChar getKeyName(String alias);
    public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate();
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias);
    public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy();
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias);
    public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge();
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge(String alias);
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship();
    public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship(String alias);
    public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableUUID getOid();
    public com.runwaysdk.query.SelectableUUID getOid(String alias);
    public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel);
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization();
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias);
    public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias, String displayLabel);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner();
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias);
    public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getPhoneNumber();
    public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias);
    public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getProgress();
    public com.runwaysdk.query.SelectableChar getProgress(String alias);
    public com.runwaysdk.query.SelectableChar getProgress(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableLong getSeq();
    public com.runwaysdk.query.SelectableLong getSeq(String alias);
    public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSiteMaster();
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias);
    public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getType();
    public com.runwaysdk.query.SelectableChar getType(String alias);
    public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getUseConstraints();
    public com.runwaysdk.query.SelectableChar getUseConstraints(String alias);
    public com.runwaysdk.query.SelectableChar getUseConstraints(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(net.geoprism.registry.HierarchicalRelationshipType ... hierarchicalRelationshipType);
    public com.runwaysdk.query.Condition notContainsAny(net.geoprism.registry.HierarchicalRelationshipType ... hierarchicalRelationshipType);
    public com.runwaysdk.query.Condition containsAll(net.geoprism.registry.HierarchicalRelationshipType ... hierarchicalRelationshipType);
    public com.runwaysdk.query.Condition notContainsAll(net.geoprism.registry.HierarchicalRelationshipType ... hierarchicalRelationshipType);
    public com.runwaysdk.query.Condition containsExactly(net.geoprism.registry.HierarchicalRelationshipType ... hierarchicalRelationshipType);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class HierarchicalRelationshipTypeQueryMultiReference extends com.runwaysdk.query.AttributeMultiReference
 implements HierarchicalRelationshipTypeQueryMultiReferenceIF

  {

  public HierarchicalRelationshipTypeQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(net.geoprism.registry.HierarchicalRelationshipType ... hierarchicalRelationshipType)  {

      String[] itemIdArray = new String[hierarchicalRelationshipType.length]; 

      for (int i=0; i<hierarchicalRelationshipType.length; i++)
      {
        itemIdArray[i] = hierarchicalRelationshipType[i].getOid();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(net.geoprism.registry.HierarchicalRelationshipType ... hierarchicalRelationshipType)  {

      String[] itemIdArray = new String[hierarchicalRelationshipType.length]; 

      for (int i=0; i<hierarchicalRelationshipType.length; i++)
      {
        itemIdArray[i] = hierarchicalRelationshipType[i].getOid();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(net.geoprism.registry.HierarchicalRelationshipType ... hierarchicalRelationshipType)  {

      String[] itemIdArray = new String[hierarchicalRelationshipType.length]; 

      for (int i=0; i<hierarchicalRelationshipType.length; i++)
      {
        itemIdArray[i] = hierarchicalRelationshipType[i].getOid();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(net.geoprism.registry.HierarchicalRelationshipType ... hierarchicalRelationshipType)  {

      String[] itemIdArray = new String[hierarchicalRelationshipType.length]; 

      for (int i=0; i<hierarchicalRelationshipType.length; i++)
      {
        itemIdArray[i] = hierarchicalRelationshipType[i].getOid();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(net.geoprism.registry.HierarchicalRelationshipType ... hierarchicalRelationshipType)  {

      String[] itemIdArray = new String[hierarchicalRelationshipType.length]; 

      for (int i=0; i<hierarchicalRelationshipType.length; i++)
      {
        itemIdArray[i] = hierarchicalRelationshipType[i].getOid();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableChar getAbstractDescription()
  {
    return getAbstractDescription(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAbstractDescription(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ABSTRACTDESCRIPTION, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAbstractDescription(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ABSTRACTDESCRIPTION, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getAccessConstraints()
  {
    return getAccessConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ACCESSCONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ACCESSCONSTRAINTS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getAcknowledgement()
  {
    return getAcknowledgement(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ACKNOWLEDGEMENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.ACKNOWLEDGEMENT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCode()
  {
    return getCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.CODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.CODE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getContact()
  {
    return getContact(null);

  }
 
  public com.runwaysdk.query.SelectableChar getContact(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.CONTACT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getContact(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.CONTACT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getCreateDate()
  {
    return getCreateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.HierarchicalRelationshipType.CREATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getCreateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.HierarchicalRelationshipType.CREATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy()
  {
    return getCreatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getCreatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY,  alias, displayLabel);

  }
  public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription()
  {
    return getDescription(null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription(String alias)
  {
    return (net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF getDescription(String alias, String displayLabel)
  {
    return (net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStructIF)this.attributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getDisclaimer()
  {
    return getDisclaimer(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.DISCLAIMER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.DISCLAIMER, alias, displayLabel);

  }
  public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getEmail()
  {
    return getEmail(null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.EMAIL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.EMAIL, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain()
  {
    return getEntityDomain(null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF getEntityDomain(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getKeyName()
  {
    return getKeyName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.KEYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getKeyName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.KEYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate()
  {
    return getLastUpdateDate(null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDATE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableMoment getLastUpdateDate(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableMoment)this.get(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDATE, alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy()
  {
    return getLastUpdatedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLastUpdatedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy()
  {
    return getLockedBy(null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY, alias, null);

  }
 
  public com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF getLockedBy(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge()
  {
    return getMdEdge(null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge(String alias)
  {
    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getMdEdge(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE,  alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship()
  {
    return getMdTermRelationship(null);

  }
 
  public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship(String alias)
  {
    return (com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF getMdTermRelationship(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableUUID getOid()
  {
    return getOid(null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.HierarchicalRelationshipType.OID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableUUID getOid(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableUUID)this.get(net.geoprism.registry.HierarchicalRelationshipType.OID, alias, displayLabel);

  }
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization()
  {
    return getOrganization(null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias)
  {
    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION, alias, null);

  }
 
  public net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF getOrganization(String alias, String displayLabel)
  {
    return (net.geoprism.registry.OrganizationQuery.OrganizationQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION,  alias, displayLabel);

  }
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner()
  {
    return getOwner(null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.OWNER, alias, null);

  }
 
  public com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF getOwner(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.ActorQuery.ActorQueryReferenceIF)this.get(net.geoprism.registry.HierarchicalRelationshipType.OWNER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPhoneNumber()
  {
    return getPhoneNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.PHONENUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.PHONENUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProgress()
  {
    return getProgress(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.PROGRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.PROGRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableLong getSeq()
  {
    return getSeq(null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.HierarchicalRelationshipType.SEQ, alias, null);

  }
 
  public com.runwaysdk.query.SelectableLong getSeq(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableLong)this.get(net.geoprism.registry.HierarchicalRelationshipType.SEQ, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSiteMaster()
  {
    return getSiteMaster(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.SITEMASTER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSiteMaster(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.SITEMASTER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getType()
  {
    return getType(null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.TYPE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getType(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.TYPE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUseConstraints()
  {
    return getUseConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.USECONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.registry.HierarchicalRelationshipType.USECONSTRAINTS, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.CREATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.ENTITYDOMAIN)) 
    {
       return new com.runwaysdk.system.metadata.MdDomainQuery.MdDomainQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.LASTUPDATEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.LOCKEDBY)) 
    {
       return new com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.MDEDGE)) 
    {
       return new com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.MDTERMRELATIONSHIP)) 
    {
       return new com.runwaysdk.system.metadata.MdTermRelationshipQuery.MdTermRelationshipQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.ORGANIZATION)) 
    {
       return new net.geoprism.registry.OrganizationQuery.OrganizationQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.OWNER)) 
    {
       return new com.runwaysdk.system.ActorQuery.ActorQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.DESCRIPTION)) 
    {
       return new net.geoprism.registry.HierarchicalRelationshipTypeDescriptionQuery.HierarchicalRelationshipTypeDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.registry.HierarchicalRelationshipType.DISPLAYLABEL)) 
    {
       return new net.geoprism.registry.HierarchicalRelationshipTypeDisplayLabelQuery.HierarchicalRelationshipTypeDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      String error = "Attribute type ["+mdAttributeIF.getType()+"] is invalid.";
      throw new com.runwaysdk.query.QueryException(error);
    }
  }

  }
}

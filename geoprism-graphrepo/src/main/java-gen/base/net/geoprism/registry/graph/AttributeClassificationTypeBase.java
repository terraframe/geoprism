package net.geoprism.registry.graph;

@com.runwaysdk.business.ClassSignature(hash = 101658815)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to AttributeClassificationType.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class AttributeClassificationTypeBase extends com.runwaysdk.business.graph.VertexObject
{
  public final static String CLASS = "net.geoprism.registry.graph.AttributeClassificationType";
  public final static java.lang.String MDCLASSIFICATION = "mdClassification";
  public final static java.lang.String OID = "oid";
  public final static java.lang.String ROOTTERM = "rootTerm";
  public final static java.lang.String SEQ = "seq";
  @SuppressWarnings("unused")
  private static final long serialVersionUID = 101658815;
  
  public AttributeClassificationTypeBase()
  {
    super();
  }
  
  public com.runwaysdk.system.metadata.MdClassification getMdClassification()
  {
    if (this.getObjectValue(MDCLASSIFICATION) == null)
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdClassification.get( (String) this.getObjectValue(MDCLASSIFICATION));
    }
  }
  
  public String getMdClassificationOid()
  {
    return (String) this.getObjectValue(MDCLASSIFICATION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getMdClassificationMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.AttributeClassificationType.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(MDCLASSIFICATION);
  }
  
  public void setMdClassification(com.runwaysdk.system.metadata.MdClassification value)
  {
    this.setValue(MDCLASSIFICATION, value.getOid());
  }
  
  public void setMdClassificationId(java.lang.String oid)
  {
    this.setValue(MDCLASSIFICATION, oid);
  }
  
  public String getOid()
  {
    return (String) this.getObjectValue(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.AttributeClassificationType.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF)mdClassIF.definesAttribute(OID);
  }
  
  public String getRootTerm()
  {
    return (String) this.getObjectValue(ROOTTERM);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getRootTermMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.AttributeClassificationType.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(ROOTTERM);
  }
  
  public void setRootTerm(String value)
  {
    this.setValue(ROOTTERM, value);
  }
  
  public Long getSeq()
  {
    return (Long) this.getObjectValue(SEQ);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeLongDAOIF getSeqMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.AttributeClassificationType.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeLongDAOIF)mdClassIF.definesAttribute(SEQ);
  }
  
  public void setSeq(Long value)
  {
    this.setValue(SEQ, value);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static AttributeClassificationType get(String oid)
  {
    return (AttributeClassificationType) com.runwaysdk.business.graph.VertexObject.get(CLASS, oid);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}

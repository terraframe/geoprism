/**
 * Copyright (c) 2023 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Geoprism(tm).
 *
 * Geoprism(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Geoprism(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Geoprism(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package net.geoprism.registry.graph;

@com.runwaysdk.business.ClassSignature(hash = -1804329531)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to AttributeTermType.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class AttributeTermTypeBase extends net.geoprism.registry.graph.AttributeType
{
  public final static String CLASS = "net.geoprism.registry.graph.AttributeTermType";
  public final static java.lang.String ROOTTERM = "rootTerm";
  @SuppressWarnings("unused")
  private static final long serialVersionUID = -1804329531;
  
  public AttributeTermTypeBase()
  {
    super();
  }
  
  public net.geoprism.ontology.Classifier getRootTerm()
  {
    if (this.getObjectValue(ROOTTERM) == null)
    {
      return null;
    }
    else
    {
      return net.geoprism.ontology.Classifier.get( (String) this.getObjectValue(ROOTTERM));
    }
  }
  
  public String getRootTermOid()
  {
    return (String) this.getObjectValue(ROOTTERM);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getRootTermMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.AttributeTermType.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(ROOTTERM);
  }
  
  public void setRootTerm(net.geoprism.ontology.Classifier value)
  {
    this.setValue(ROOTTERM, value.getOid());
  }
  
  public void setRootTermId(java.lang.String oid)
  {
    this.setValue(ROOTTERM, oid);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static AttributeTermType get(String oid)
  {
    return (AttributeTermType) com.runwaysdk.business.graph.VertexObject.get(CLASS, oid);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}

/**
 * Copyright (c) 2022 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Geoprism Registry(tm).
 *
 * Geoprism Registry(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Geoprism Registry(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Geoprism Registry(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package net.geoprism.registry.graph.transition;

@com.runwaysdk.business.ClassSignature(hash = 942019818)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to Transition.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class TransitionBase extends com.runwaysdk.business.graph.VertexObject
{
  public final static String CLASS = "net.geoprism.registry.graph.transition.Transition";
  public static final java.lang.String EVENT = "event";
  public static final java.lang.String IMPACT = "impact";
  public static final java.lang.String OID = "oid";
  public static final java.lang.String ORDER = "order";
  public static final java.lang.String SEQ = "seq";
  public static final java.lang.String SOURCE = "source";
  public static final java.lang.String TARGET = "target";
  public static final java.lang.String TRANSITIONTYPE = "transitionType";
  private static final long serialVersionUID = 942019818;
  
  public TransitionBase()
  {
    super();
  }
  
  public net.geoprism.registry.graph.transition.TransitionEvent getEvent()
  {
    return (net.geoprism.registry.graph.transition.TransitionEvent) this.getObjectValue(EVENT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeGraphReferenceDAOIF getEventMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.transition.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeGraphReferenceDAOIF)mdClassIF.definesAttribute(EVENT);
  }
  
  public void setEvent(net.geoprism.registry.graph.transition.TransitionEvent value)
  {
    this.setValue(EVENT, value);
  }
  
  public String getImpact()
  {
    return (String) this.getObjectValue(IMPACT);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getImpactMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.transition.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(IMPACT);
  }
  
  public void setImpact(String value)
  {
    this.setValue(IMPACT, value);
  }
  
  public String getOid()
  {
    return (String) this.getObjectValue(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.transition.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF)mdClassIF.definesAttribute(OID);
  }
  
  public Integer getOrder()
  {
    return (Integer) this.getObjectValue(ORDER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getOrderMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.transition.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(ORDER);
  }
  
  public void setOrder(Integer value)
  {
    this.setValue(ORDER, value);
  }
  
  public Long getSeq()
  {
    return (Long) this.getObjectValue(SEQ);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeLongDAOIF getSeqMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.transition.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeLongDAOIF)mdClassIF.definesAttribute(SEQ);
  }
  
  public void setSeq(Long value)
  {
    this.setValue(SEQ, value);
  }
  
  public net.geoprism.registry.graph.GeoVertex getSource()
  {
    return (net.geoprism.registry.graph.GeoVertex) this.getObjectValue(SOURCE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeGraphReferenceDAOIF getSourceMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.transition.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeGraphReferenceDAOIF)mdClassIF.definesAttribute(SOURCE);
  }
  
  public void setSource(net.geoprism.registry.graph.GeoVertex value)
  {
    this.setValue(SOURCE, value);
  }
  
  public net.geoprism.registry.graph.GeoVertex getTarget()
  {
    return (net.geoprism.registry.graph.GeoVertex) this.getObjectValue(TARGET);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeGraphReferenceDAOIF getTargetMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.transition.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeGraphReferenceDAOIF)mdClassIF.definesAttribute(TARGET);
  }
  
  public void setTarget(net.geoprism.registry.graph.GeoVertex value)
  {
    this.setValue(TARGET, value);
  }
  
  public String getTransitionType()
  {
    return (String) this.getObjectValue(TRANSITIONTYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getTransitionTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.registry.graph.transition.Transition.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(TRANSITIONTYPE);
  }
  
  public void setTransitionType(String value)
  {
    this.setValue(TRANSITIONTYPE, value);
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static Transition get(String oid)
  {
    return (Transition) com.runwaysdk.business.graph.VertexObject.get(CLASS, oid);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}

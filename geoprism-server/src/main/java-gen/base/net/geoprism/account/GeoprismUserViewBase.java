/**
 * Copyright (c) 2022 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Geoprism(tm).
 *
 * Geoprism(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Geoprism(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Geoprism(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package net.geoprism.account;

@com.runwaysdk.business.ClassSignature(hash = -1371508541)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to GeoprismUserView.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class GeoprismUserViewBase extends com.runwaysdk.business.View
{
  public final static String CLASS = "net.geoprism.account.GeoprismUserView";
  public static java.lang.String EMAIL = "email";
  public static java.lang.String FIRSTNAME = "firstName";
  public static java.lang.String INACTIVE = "inactive";
  public static java.lang.String LASTNAME = "lastName";
  public static java.lang.String NEWINSTANCE = "newInstance";
  public static java.lang.String OID = "oid";
  public static java.lang.String PHONENUMBER = "phoneNumber";
  public static java.lang.String ROLES = "roles";
  public static java.lang.String USER = "user";
  public static java.lang.String USERNAME = "username";
  private static final long serialVersionUID = -1371508541;
  
  public GeoprismUserViewBase()
  {
    super();
  }
  
  public String getEmail()
  {
    return getValue(EMAIL);
  }
  
  public void validateEmail()
  {
    this.validateAttribute(EMAIL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getEmailMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.account.GeoprismUserView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(EMAIL);
  }
  
  public void setEmail(String value)
  {
    if(value == null)
    {
      setValue(EMAIL, "");
    }
    else
    {
      setValue(EMAIL, value);
    }
  }
  
  public String getFirstName()
  {
    return getValue(FIRSTNAME);
  }
  
  public void validateFirstName()
  {
    this.validateAttribute(FIRSTNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getFirstNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.account.GeoprismUserView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(FIRSTNAME);
  }
  
  public void setFirstName(String value)
  {
    if(value == null)
    {
      setValue(FIRSTNAME, "");
    }
    else
    {
      setValue(FIRSTNAME, value);
    }
  }
  
  public Boolean getInactive()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(INACTIVE));
  }
  
  public void validateInactive()
  {
    this.validateAttribute(INACTIVE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getInactiveMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.account.GeoprismUserView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(INACTIVE);
  }
  
  public void setInactive(Boolean value)
  {
    if(value == null)
    {
      setValue(INACTIVE, "");
    }
    else
    {
      setValue(INACTIVE, java.lang.Boolean.toString(value));
    }
  }
  
  public String getLastName()
  {
    return getValue(LASTNAME);
  }
  
  public void validateLastName()
  {
    this.validateAttribute(LASTNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getLastNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.account.GeoprismUserView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(LASTNAME);
  }
  
  public void setLastName(String value)
  {
    if(value == null)
    {
      setValue(LASTNAME, "");
    }
    else
    {
      setValue(LASTNAME, value);
    }
  }
  
  public Boolean getNewInstance()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(NEWINSTANCE));
  }
  
  public void validateNewInstance()
  {
    this.validateAttribute(NEWINSTANCE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeBooleanDAOIF getNewInstanceMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.account.GeoprismUserView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeBooleanDAOIF)mdClassIF.definesAttribute(NEWINSTANCE);
  }
  
  public void setNewInstance(Boolean value)
  {
    if(value == null)
    {
      setValue(NEWINSTANCE, "");
    }
    else
    {
      setValue(NEWINSTANCE, java.lang.Boolean.toString(value));
    }
  }
  
  public String getOid()
  {
    return getValue(OID);
  }
  
  public void validateOid()
  {
    this.validateAttribute(OID);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF getOidMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.account.GeoprismUserView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeUUIDDAOIF)mdClassIF.definesAttribute(OID);
  }
  
  public String getPhoneNumber()
  {
    return getValue(PHONENUMBER);
  }
  
  public void validatePhoneNumber()
  {
    this.validateAttribute(PHONENUMBER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getPhoneNumberMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.account.GeoprismUserView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(PHONENUMBER);
  }
  
  public void setPhoneNumber(String value)
  {
    if(value == null)
    {
      setValue(PHONENUMBER, "");
    }
    else
    {
      setValue(PHONENUMBER, value);
    }
  }
  
  public String getRoles()
  {
    return getValue(ROLES);
  }
  
  public void validateRoles()
  {
    this.validateAttribute(ROLES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getRolesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.account.GeoprismUserView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(ROLES);
  }
  
  public void setRoles(String value)
  {
    if(value == null)
    {
      setValue(ROLES, "");
    }
    else
    {
      setValue(ROLES, value);
    }
  }
  
  public net.geoprism.GeoprismUser getUser()
  {
    if (getValue(USER).trim().equals(""))
    {
      return null;
    }
    else
    {
      return net.geoprism.GeoprismUser.get(getValue(USER));
    }
  }
  
  public String getUserOid()
  {
    return getValue(USER);
  }
  
  public void validateUser()
  {
    this.validateAttribute(USER);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getUserMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.account.GeoprismUserView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(USER);
  }
  
  public void setUser(net.geoprism.GeoprismUser value)
  {
    if(value == null)
    {
      setValue(USER, "");
    }
    else
    {
      setValue(USER, value.getOid());
    }
  }
  
  public void setUserId(java.lang.String oid)
  {
    if(oid == null)
    {
      setValue(USER, "");
    }
    else
    {
      setValue(USER, oid);
    }
  }
  
  public String getUsername()
  {
    return getValue(USERNAME);
  }
  
  public void validateUsername()
  {
    this.validateAttribute(USERNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF getUsernameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.account.GeoprismUserView.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeVirtualDAOIF)mdClassIF.definesAttribute(USERNAME);
  }
  
  public void setUsername(String value)
  {
    if(value == null)
    {
      setValue(USERNAME, "");
    }
    else
    {
      setValue(USERNAME, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static GeoprismUserView get(String oid)
  {
    return (GeoprismUserView) com.runwaysdk.business.View.get(oid);
  }
  
  public static java.lang.String page(java.lang.Integer pageNumber)
  {
    String msg = "This method should never be invoked.  It should be overwritten in net.geoprism.account.GeoprismUserView.java";
    throw new com.runwaysdk.dataaccess.metadata.ForbiddenMethodException(msg);
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}

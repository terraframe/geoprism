/**
 * Copyright (c) 2022 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Geoprism(tm).
 *
 * Geoprism(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Geoprism(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Geoprism(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package net.geoprism.dashboard;

@com.runwaysdk.business.ClassSignature(hash = 822931852)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to DashboardThematicStyle.java
 *
 * @author Autogenerated by RunwaySDK
 */
public abstract class DashboardThematicStyleBase extends net.geoprism.dashboard.DashboardStyle 
{
  public final static String CLASS = "net.geoprism.dashboard.DashboardThematicStyle";
  public static java.lang.String BUBBLECONTINUOUSSIZE = "bubbleContinuousSize";
  public static java.lang.String BUBBLEFILL = "bubbleFill";
  public static java.lang.String BUBBLEMAXSIZE = "bubbleMaxSize";
  public static java.lang.String BUBBLEMINSIZE = "bubbleMinSize";
  public static java.lang.String BUBBLEOPACITY = "bubbleOpacity";
  public static java.lang.String BUBBLEROTATION = "bubbleRotation";
  public static java.lang.String BUBBLESIZE = "bubbleSize";
  public static java.lang.String BUBBLESTROKE = "bubbleStroke";
  public static java.lang.String BUBBLESTROKEOPACITY = "bubbleStrokeOpacity";
  public static java.lang.String BUBBLESTROKEWIDTH = "bubbleStrokeWidth";
  public static java.lang.String BUBBLEWELLKNOWNNAME = "bubbleWellKnownName";
  public static java.lang.String CATEGORYPOINTFILLOPACITY = "categoryPointFillOpacity";
  public static java.lang.String CATEGORYPOINTSIZE = "categoryPointSize";
  public static java.lang.String CATEGORYPOINTSTROKE = "categoryPointStroke";
  public static java.lang.String CATEGORYPOINTSTROKEOPACITY = "categoryPointStrokeOpacity";
  public static java.lang.String CATEGORYPOINTSTROKEWIDTH = "categoryPointStrokeWidth";
  public static java.lang.String CATEGORYPOINTSTYLES = "categoryPointStyles";
  public static java.lang.String CATEGORYPOINTWELLKNOWNNAME = "categoryPointWellKnownName";
  public static java.lang.String CATEGORYPOLYGONFILLOPACITY = "categoryPolygonFillOpacity";
  public static java.lang.String CATEGORYPOLYGONSTROKE = "categoryPolygonStroke";
  public static java.lang.String CATEGORYPOLYGONSTROKEOPACITY = "categoryPolygonStrokeOpacity";
  public static java.lang.String CATEGORYPOLYGONSTROKEWIDTH = "categoryPolygonStrokeWidth";
  public static java.lang.String CATEGORYPOLYGONSTYLES = "categoryPolygonStyles";
  public static java.lang.String GRADIENTPOINTFILLOPACITY = "gradientPointFillOpacity";
  public static java.lang.String GRADIENTPOINTMAXFILL = "gradientPointMaxFill";
  public static java.lang.String GRADIENTPOINTMINFILL = "gradientPointMinFill";
  public static java.lang.String GRADIENTPOINTSIZE = "gradientPointSize";
  public static java.lang.String GRADIENTPOINTSTROKE = "gradientPointStroke";
  public static java.lang.String GRADIENTPOINTSTROKEOPACITY = "gradientPointStrokeOpacity";
  public static java.lang.String GRADIENTPOINTSTROKEWIDTH = "gradientPointStrokeWidth";
  public static java.lang.String GRADIENTPOINTWELLKNOWNNAME = "gradientPointWellKnownName";
  public static java.lang.String GRADIENTPOLYGONFILLOPACITY = "gradientPolygonFillOpacity";
  public static java.lang.String GRADIENTPOLYGONMAXFILL = "gradientPolygonMaxFill";
  public static java.lang.String GRADIENTPOLYGONMINFILL = "gradientPolygonMinFill";
  public static java.lang.String GRADIENTPOLYGONSTROKE = "gradientPolygonStroke";
  public static java.lang.String GRADIENTPOLYGONSTROKEOPACITY = "gradientPolygonStrokeOpacity";
  public static java.lang.String GRADIENTPOLYGONSTROKEWIDTH = "gradientPolygonStrokeWidth";
  public static java.lang.String NUMBUBBLESIZECATEGORIES = "numBubbleSizeCategories";
  public static java.lang.String NUMGRADIENTPOINTCATEGORIES = "numGradientPointCategories";
  public static java.lang.String NUMGRADIENTPOLYGONCATEGORIES = "numGradientPolygonCategories";
  public static java.lang.String SECONDARYAGGREGATIONTYPE = "secondaryAggregationType";
  public static java.lang.String SECONDARYATTRIBUTE = "secondaryAttribute";
  public static java.lang.String SECONDARYCATEGORIES = "secondaryCategories";
  private static final long serialVersionUID = 822931852;
  
  public DashboardThematicStyleBase()
  {
    super();
  }
  
  public Boolean getBubbleContinuousSize()
  {
    return com.runwaysdk.constants.MdAttributeBooleanUtil.getTypeSafeValue(getValue(BUBBLECONTINUOUSSIZE));
  }
  
  public void validateBubbleContinuousSize()
  {
    this.validateAttribute(BUBBLECONTINUOUSSIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeBooleanDAOIF getBubbleContinuousSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeBooleanDAOIF)mdClassIF.definesAttribute(BUBBLECONTINUOUSSIZE);
  }
  
  public void setBubbleContinuousSize(Boolean value)
  {
    if(value == null)
    {
      setValue(BUBBLECONTINUOUSSIZE, "");
    }
    else
    {
      setValue(BUBBLECONTINUOUSSIZE, java.lang.Boolean.toString(value));
    }
  }
  
  public String getBubbleFill()
  {
    return getValue(BUBBLEFILL);
  }
  
  public void validateBubbleFill()
  {
    this.validateAttribute(BUBBLEFILL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getBubbleFillMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(BUBBLEFILL);
  }
  
  public void setBubbleFill(String value)
  {
    if(value == null)
    {
      setValue(BUBBLEFILL, "");
    }
    else
    {
      setValue(BUBBLEFILL, value);
    }
  }
  
  public Integer getBubbleMaxSize()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(BUBBLEMAXSIZE));
  }
  
  public void validateBubbleMaxSize()
  {
    this.validateAttribute(BUBBLEMAXSIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getBubbleMaxSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(BUBBLEMAXSIZE);
  }
  
  public void setBubbleMaxSize(Integer value)
  {
    if(value == null)
    {
      setValue(BUBBLEMAXSIZE, "");
    }
    else
    {
      setValue(BUBBLEMAXSIZE, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getBubbleMinSize()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(BUBBLEMINSIZE));
  }
  
  public void validateBubbleMinSize()
  {
    this.validateAttribute(BUBBLEMINSIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getBubbleMinSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(BUBBLEMINSIZE);
  }
  
  public void setBubbleMinSize(Integer value)
  {
    if(value == null)
    {
      setValue(BUBBLEMINSIZE, "");
    }
    else
    {
      setValue(BUBBLEMINSIZE, java.lang.Integer.toString(value));
    }
  }
  
  public Double getBubbleOpacity()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(BUBBLEOPACITY));
  }
  
  public void validateBubbleOpacity()
  {
    this.validateAttribute(BUBBLEOPACITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF getBubbleOpacityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF)mdClassIF.definesAttribute(BUBBLEOPACITY);
  }
  
  public void setBubbleOpacity(Double value)
  {
    if(value == null)
    {
      setValue(BUBBLEOPACITY, "");
    }
    else
    {
      setValue(BUBBLEOPACITY, java.lang.Double.toString(value));
    }
  }
  
  public Integer getBubbleRotation()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(BUBBLEROTATION));
  }
  
  public void validateBubbleRotation()
  {
    this.validateAttribute(BUBBLEROTATION);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getBubbleRotationMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(BUBBLEROTATION);
  }
  
  public void setBubbleRotation(Integer value)
  {
    if(value == null)
    {
      setValue(BUBBLEROTATION, "");
    }
    else
    {
      setValue(BUBBLEROTATION, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getBubbleSize()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(BUBBLESIZE));
  }
  
  public void validateBubbleSize()
  {
    this.validateAttribute(BUBBLESIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getBubbleSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(BUBBLESIZE);
  }
  
  public void setBubbleSize(Integer value)
  {
    if(value == null)
    {
      setValue(BUBBLESIZE, "");
    }
    else
    {
      setValue(BUBBLESIZE, java.lang.Integer.toString(value));
    }
  }
  
  public String getBubbleStroke()
  {
    return getValue(BUBBLESTROKE);
  }
  
  public void validateBubbleStroke()
  {
    this.validateAttribute(BUBBLESTROKE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getBubbleStrokeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(BUBBLESTROKE);
  }
  
  public void setBubbleStroke(String value)
  {
    if(value == null)
    {
      setValue(BUBBLESTROKE, "");
    }
    else
    {
      setValue(BUBBLESTROKE, value);
    }
  }
  
  public Double getBubbleStrokeOpacity()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(BUBBLESTROKEOPACITY));
  }
  
  public void validateBubbleStrokeOpacity()
  {
    this.validateAttribute(BUBBLESTROKEOPACITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF getBubbleStrokeOpacityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF)mdClassIF.definesAttribute(BUBBLESTROKEOPACITY);
  }
  
  public void setBubbleStrokeOpacity(Double value)
  {
    if(value == null)
    {
      setValue(BUBBLESTROKEOPACITY, "");
    }
    else
    {
      setValue(BUBBLESTROKEOPACITY, java.lang.Double.toString(value));
    }
  }
  
  public Integer getBubbleStrokeWidth()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(BUBBLESTROKEWIDTH));
  }
  
  public void validateBubbleStrokeWidth()
  {
    this.validateAttribute(BUBBLESTROKEWIDTH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getBubbleStrokeWidthMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(BUBBLESTROKEWIDTH);
  }
  
  public void setBubbleStrokeWidth(Integer value)
  {
    if(value == null)
    {
      setValue(BUBBLESTROKEWIDTH, "");
    }
    else
    {
      setValue(BUBBLESTROKEWIDTH, java.lang.Integer.toString(value));
    }
  }
  
  public String getBubbleWellKnownName()
  {
    return getValue(BUBBLEWELLKNOWNNAME);
  }
  
  public void validateBubbleWellKnownName()
  {
    this.validateAttribute(BUBBLEWELLKNOWNNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getBubbleWellKnownNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(BUBBLEWELLKNOWNNAME);
  }
  
  public void setBubbleWellKnownName(String value)
  {
    if(value == null)
    {
      setValue(BUBBLEWELLKNOWNNAME, "");
    }
    else
    {
      setValue(BUBBLEWELLKNOWNNAME, value);
    }
  }
  
  public Double getCategoryPointFillOpacity()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(CATEGORYPOINTFILLOPACITY));
  }
  
  public void validateCategoryPointFillOpacity()
  {
    this.validateAttribute(CATEGORYPOINTFILLOPACITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF getCategoryPointFillOpacityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF)mdClassIF.definesAttribute(CATEGORYPOINTFILLOPACITY);
  }
  
  public void setCategoryPointFillOpacity(Double value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOINTFILLOPACITY, "");
    }
    else
    {
      setValue(CATEGORYPOINTFILLOPACITY, java.lang.Double.toString(value));
    }
  }
  
  public Integer getCategoryPointSize()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(CATEGORYPOINTSIZE));
  }
  
  public void validateCategoryPointSize()
  {
    this.validateAttribute(CATEGORYPOINTSIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getCategoryPointSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(CATEGORYPOINTSIZE);
  }
  
  public void setCategoryPointSize(Integer value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOINTSIZE, "");
    }
    else
    {
      setValue(CATEGORYPOINTSIZE, java.lang.Integer.toString(value));
    }
  }
  
  public String getCategoryPointStroke()
  {
    return getValue(CATEGORYPOINTSTROKE);
  }
  
  public void validateCategoryPointStroke()
  {
    this.validateAttribute(CATEGORYPOINTSTROKE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getCategoryPointStrokeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(CATEGORYPOINTSTROKE);
  }
  
  public void setCategoryPointStroke(String value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOINTSTROKE, "");
    }
    else
    {
      setValue(CATEGORYPOINTSTROKE, value);
    }
  }
  
  public Double getCategoryPointStrokeOpacity()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(CATEGORYPOINTSTROKEOPACITY));
  }
  
  public void validateCategoryPointStrokeOpacity()
  {
    this.validateAttribute(CATEGORYPOINTSTROKEOPACITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF getCategoryPointStrokeOpacityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF)mdClassIF.definesAttribute(CATEGORYPOINTSTROKEOPACITY);
  }
  
  public void setCategoryPointStrokeOpacity(Double value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOINTSTROKEOPACITY, "");
    }
    else
    {
      setValue(CATEGORYPOINTSTROKEOPACITY, java.lang.Double.toString(value));
    }
  }
  
  public Integer getCategoryPointStrokeWidth()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(CATEGORYPOINTSTROKEWIDTH));
  }
  
  public void validateCategoryPointStrokeWidth()
  {
    this.validateAttribute(CATEGORYPOINTSTROKEWIDTH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getCategoryPointStrokeWidthMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(CATEGORYPOINTSTROKEWIDTH);
  }
  
  public void setCategoryPointStrokeWidth(Integer value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOINTSTROKEWIDTH, "");
    }
    else
    {
      setValue(CATEGORYPOINTSTROKEWIDTH, java.lang.Integer.toString(value));
    }
  }
  
  public String getCategoryPointStyles()
  {
    return getValue(CATEGORYPOINTSTYLES);
  }
  
  public void validateCategoryPointStyles()
  {
    this.validateAttribute(CATEGORYPOINTSTYLES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getCategoryPointStylesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(CATEGORYPOINTSTYLES);
  }
  
  public void setCategoryPointStyles(String value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOINTSTYLES, "");
    }
    else
    {
      setValue(CATEGORYPOINTSTYLES, value);
    }
  }
  
  public String getCategoryPointWellKnownName()
  {
    return getValue(CATEGORYPOINTWELLKNOWNNAME);
  }
  
  public void validateCategoryPointWellKnownName()
  {
    this.validateAttribute(CATEGORYPOINTWELLKNOWNNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getCategoryPointWellKnownNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(CATEGORYPOINTWELLKNOWNNAME);
  }
  
  public void setCategoryPointWellKnownName(String value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOINTWELLKNOWNNAME, "");
    }
    else
    {
      setValue(CATEGORYPOINTWELLKNOWNNAME, value);
    }
  }
  
  public Double getCategoryPolygonFillOpacity()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(CATEGORYPOLYGONFILLOPACITY));
  }
  
  public void validateCategoryPolygonFillOpacity()
  {
    this.validateAttribute(CATEGORYPOLYGONFILLOPACITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF getCategoryPolygonFillOpacityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF)mdClassIF.definesAttribute(CATEGORYPOLYGONFILLOPACITY);
  }
  
  public void setCategoryPolygonFillOpacity(Double value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOLYGONFILLOPACITY, "");
    }
    else
    {
      setValue(CATEGORYPOLYGONFILLOPACITY, java.lang.Double.toString(value));
    }
  }
  
  public String getCategoryPolygonStroke()
  {
    return getValue(CATEGORYPOLYGONSTROKE);
  }
  
  public void validateCategoryPolygonStroke()
  {
    this.validateAttribute(CATEGORYPOLYGONSTROKE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getCategoryPolygonStrokeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(CATEGORYPOLYGONSTROKE);
  }
  
  public void setCategoryPolygonStroke(String value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOLYGONSTROKE, "");
    }
    else
    {
      setValue(CATEGORYPOLYGONSTROKE, value);
    }
  }
  
  public Double getCategoryPolygonStrokeOpacity()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(CATEGORYPOLYGONSTROKEOPACITY));
  }
  
  public void validateCategoryPolygonStrokeOpacity()
  {
    this.validateAttribute(CATEGORYPOLYGONSTROKEOPACITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF getCategoryPolygonStrokeOpacityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF)mdClassIF.definesAttribute(CATEGORYPOLYGONSTROKEOPACITY);
  }
  
  public void setCategoryPolygonStrokeOpacity(Double value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOLYGONSTROKEOPACITY, "");
    }
    else
    {
      setValue(CATEGORYPOLYGONSTROKEOPACITY, java.lang.Double.toString(value));
    }
  }
  
  public Integer getCategoryPolygonStrokeWidth()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(CATEGORYPOLYGONSTROKEWIDTH));
  }
  
  public void validateCategoryPolygonStrokeWidth()
  {
    this.validateAttribute(CATEGORYPOLYGONSTROKEWIDTH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getCategoryPolygonStrokeWidthMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(CATEGORYPOLYGONSTROKEWIDTH);
  }
  
  public void setCategoryPolygonStrokeWidth(Integer value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOLYGONSTROKEWIDTH, "");
    }
    else
    {
      setValue(CATEGORYPOLYGONSTROKEWIDTH, java.lang.Integer.toString(value));
    }
  }
  
  public String getCategoryPolygonStyles()
  {
    return getValue(CATEGORYPOLYGONSTYLES);
  }
  
  public void validateCategoryPolygonStyles()
  {
    this.validateAttribute(CATEGORYPOLYGONSTYLES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getCategoryPolygonStylesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(CATEGORYPOLYGONSTYLES);
  }
  
  public void setCategoryPolygonStyles(String value)
  {
    if(value == null)
    {
      setValue(CATEGORYPOLYGONSTYLES, "");
    }
    else
    {
      setValue(CATEGORYPOLYGONSTYLES, value);
    }
  }
  
  public Double getGradientPointFillOpacity()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(GRADIENTPOINTFILLOPACITY));
  }
  
  public void validateGradientPointFillOpacity()
  {
    this.validateAttribute(GRADIENTPOINTFILLOPACITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF getGradientPointFillOpacityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF)mdClassIF.definesAttribute(GRADIENTPOINTFILLOPACITY);
  }
  
  public void setGradientPointFillOpacity(Double value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOINTFILLOPACITY, "");
    }
    else
    {
      setValue(GRADIENTPOINTFILLOPACITY, java.lang.Double.toString(value));
    }
  }
  
  public String getGradientPointMaxFill()
  {
    return getValue(GRADIENTPOINTMAXFILL);
  }
  
  public void validateGradientPointMaxFill()
  {
    this.validateAttribute(GRADIENTPOINTMAXFILL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getGradientPointMaxFillMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(GRADIENTPOINTMAXFILL);
  }
  
  public void setGradientPointMaxFill(String value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOINTMAXFILL, "");
    }
    else
    {
      setValue(GRADIENTPOINTMAXFILL, value);
    }
  }
  
  public String getGradientPointMinFill()
  {
    return getValue(GRADIENTPOINTMINFILL);
  }
  
  public void validateGradientPointMinFill()
  {
    this.validateAttribute(GRADIENTPOINTMINFILL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getGradientPointMinFillMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(GRADIENTPOINTMINFILL);
  }
  
  public void setGradientPointMinFill(String value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOINTMINFILL, "");
    }
    else
    {
      setValue(GRADIENTPOINTMINFILL, value);
    }
  }
  
  public Integer getGradientPointSize()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(GRADIENTPOINTSIZE));
  }
  
  public void validateGradientPointSize()
  {
    this.validateAttribute(GRADIENTPOINTSIZE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getGradientPointSizeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(GRADIENTPOINTSIZE);
  }
  
  public void setGradientPointSize(Integer value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOINTSIZE, "");
    }
    else
    {
      setValue(GRADIENTPOINTSIZE, java.lang.Integer.toString(value));
    }
  }
  
  public String getGradientPointStroke()
  {
    return getValue(GRADIENTPOINTSTROKE);
  }
  
  public void validateGradientPointStroke()
  {
    this.validateAttribute(GRADIENTPOINTSTROKE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getGradientPointStrokeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(GRADIENTPOINTSTROKE);
  }
  
  public void setGradientPointStroke(String value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOINTSTROKE, "");
    }
    else
    {
      setValue(GRADIENTPOINTSTROKE, value);
    }
  }
  
  public Double getGradientPointStrokeOpacity()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(GRADIENTPOINTSTROKEOPACITY));
  }
  
  public void validateGradientPointStrokeOpacity()
  {
    this.validateAttribute(GRADIENTPOINTSTROKEOPACITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF getGradientPointStrokeOpacityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF)mdClassIF.definesAttribute(GRADIENTPOINTSTROKEOPACITY);
  }
  
  public void setGradientPointStrokeOpacity(Double value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOINTSTROKEOPACITY, "");
    }
    else
    {
      setValue(GRADIENTPOINTSTROKEOPACITY, java.lang.Double.toString(value));
    }
  }
  
  public Integer getGradientPointStrokeWidth()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(GRADIENTPOINTSTROKEWIDTH));
  }
  
  public void validateGradientPointStrokeWidth()
  {
    this.validateAttribute(GRADIENTPOINTSTROKEWIDTH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getGradientPointStrokeWidthMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(GRADIENTPOINTSTROKEWIDTH);
  }
  
  public void setGradientPointStrokeWidth(Integer value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOINTSTROKEWIDTH, "");
    }
    else
    {
      setValue(GRADIENTPOINTSTROKEWIDTH, java.lang.Integer.toString(value));
    }
  }
  
  public String getGradientPointWellKnownName()
  {
    return getValue(GRADIENTPOINTWELLKNOWNNAME);
  }
  
  public void validateGradientPointWellKnownName()
  {
    this.validateAttribute(GRADIENTPOINTWELLKNOWNNAME);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getGradientPointWellKnownNameMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(GRADIENTPOINTWELLKNOWNNAME);
  }
  
  public void setGradientPointWellKnownName(String value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOINTWELLKNOWNNAME, "");
    }
    else
    {
      setValue(GRADIENTPOINTWELLKNOWNNAME, value);
    }
  }
  
  public Double getGradientPolygonFillOpacity()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(GRADIENTPOLYGONFILLOPACITY));
  }
  
  public void validateGradientPolygonFillOpacity()
  {
    this.validateAttribute(GRADIENTPOLYGONFILLOPACITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF getGradientPolygonFillOpacityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF)mdClassIF.definesAttribute(GRADIENTPOLYGONFILLOPACITY);
  }
  
  public void setGradientPolygonFillOpacity(Double value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOLYGONFILLOPACITY, "");
    }
    else
    {
      setValue(GRADIENTPOLYGONFILLOPACITY, java.lang.Double.toString(value));
    }
  }
  
  public String getGradientPolygonMaxFill()
  {
    return getValue(GRADIENTPOLYGONMAXFILL);
  }
  
  public void validateGradientPolygonMaxFill()
  {
    this.validateAttribute(GRADIENTPOLYGONMAXFILL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getGradientPolygonMaxFillMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(GRADIENTPOLYGONMAXFILL);
  }
  
  public void setGradientPolygonMaxFill(String value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOLYGONMAXFILL, "");
    }
    else
    {
      setValue(GRADIENTPOLYGONMAXFILL, value);
    }
  }
  
  public String getGradientPolygonMinFill()
  {
    return getValue(GRADIENTPOLYGONMINFILL);
  }
  
  public void validateGradientPolygonMinFill()
  {
    this.validateAttribute(GRADIENTPOLYGONMINFILL);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getGradientPolygonMinFillMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(GRADIENTPOLYGONMINFILL);
  }
  
  public void setGradientPolygonMinFill(String value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOLYGONMINFILL, "");
    }
    else
    {
      setValue(GRADIENTPOLYGONMINFILL, value);
    }
  }
  
  public String getGradientPolygonStroke()
  {
    return getValue(GRADIENTPOLYGONSTROKE);
  }
  
  public void validateGradientPolygonStroke()
  {
    this.validateAttribute(GRADIENTPOLYGONSTROKE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF getGradientPolygonStrokeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeCharacterDAOIF)mdClassIF.definesAttribute(GRADIENTPOLYGONSTROKE);
  }
  
  public void setGradientPolygonStroke(String value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOLYGONSTROKE, "");
    }
    else
    {
      setValue(GRADIENTPOLYGONSTROKE, value);
    }
  }
  
  public Double getGradientPolygonStrokeOpacity()
  {
    return com.runwaysdk.constants.MdAttributeDoubleUtil.getTypeSafeValue(getValue(GRADIENTPOLYGONSTROKEOPACITY));
  }
  
  public void validateGradientPolygonStrokeOpacity()
  {
    this.validateAttribute(GRADIENTPOLYGONSTROKEOPACITY);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF getGradientPolygonStrokeOpacityMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeDoubleDAOIF)mdClassIF.definesAttribute(GRADIENTPOLYGONSTROKEOPACITY);
  }
  
  public void setGradientPolygonStrokeOpacity(Double value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOLYGONSTROKEOPACITY, "");
    }
    else
    {
      setValue(GRADIENTPOLYGONSTROKEOPACITY, java.lang.Double.toString(value));
    }
  }
  
  public Integer getGradientPolygonStrokeWidth()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(GRADIENTPOLYGONSTROKEWIDTH));
  }
  
  public void validateGradientPolygonStrokeWidth()
  {
    this.validateAttribute(GRADIENTPOLYGONSTROKEWIDTH);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getGradientPolygonStrokeWidthMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(GRADIENTPOLYGONSTROKEWIDTH);
  }
  
  public void setGradientPolygonStrokeWidth(Integer value)
  {
    if(value == null)
    {
      setValue(GRADIENTPOLYGONSTROKEWIDTH, "");
    }
    else
    {
      setValue(GRADIENTPOLYGONSTROKEWIDTH, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumBubbleSizeCategories()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMBUBBLESIZECATEGORIES));
  }
  
  public void validateNumBubbleSizeCategories()
  {
    this.validateAttribute(NUMBUBBLESIZECATEGORIES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getNumBubbleSizeCategoriesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(NUMBUBBLESIZECATEGORIES);
  }
  
  public void setNumBubbleSizeCategories(Integer value)
  {
    if(value == null)
    {
      setValue(NUMBUBBLESIZECATEGORIES, "");
    }
    else
    {
      setValue(NUMBUBBLESIZECATEGORIES, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumGradientPointCategories()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMGRADIENTPOINTCATEGORIES));
  }
  
  public void validateNumGradientPointCategories()
  {
    this.validateAttribute(NUMGRADIENTPOINTCATEGORIES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getNumGradientPointCategoriesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(NUMGRADIENTPOINTCATEGORIES);
  }
  
  public void setNumGradientPointCategories(Integer value)
  {
    if(value == null)
    {
      setValue(NUMGRADIENTPOINTCATEGORIES, "");
    }
    else
    {
      setValue(NUMGRADIENTPOINTCATEGORIES, java.lang.Integer.toString(value));
    }
  }
  
  public Integer getNumGradientPolygonCategories()
  {
    return com.runwaysdk.constants.MdAttributeIntegerUtil.getTypeSafeValue(getValue(NUMGRADIENTPOLYGONCATEGORIES));
  }
  
  public void validateNumGradientPolygonCategories()
  {
    this.validateAttribute(NUMGRADIENTPOLYGONCATEGORIES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF getNumGradientPolygonCategoriesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeIntegerDAOIF)mdClassIF.definesAttribute(NUMGRADIENTPOLYGONCATEGORIES);
  }
  
  public void setNumGradientPolygonCategories(Integer value)
  {
    if(value == null)
    {
      setValue(NUMGRADIENTPOLYGONCATEGORIES, "");
    }
    else
    {
      setValue(NUMGRADIENTPOLYGONCATEGORIES, java.lang.Integer.toString(value));
    }
  }
  
  @SuppressWarnings("unchecked")
  public java.util.List<net.geoprism.dashboard.AllAggregationType> getSecondaryAggregationType()
  {
    return (java.util.List<net.geoprism.dashboard.AllAggregationType>) getEnumValues(SECONDARYAGGREGATIONTYPE);
  }
  
  public void addSecondaryAggregationType(net.geoprism.dashboard.AllAggregationType value)
  {
    if(value != null)
    {
      addEnumItem(SECONDARYAGGREGATIONTYPE, value.getOid());
    }
  }
  
  public void removeSecondaryAggregationType(net.geoprism.dashboard.AllAggregationType value)
  {
    if(value != null)
    {
      removeEnumItem(SECONDARYAGGREGATIONTYPE, value.getOid());
    }
  }
  
  public void clearSecondaryAggregationType()
  {
    clearEnum(SECONDARYAGGREGATIONTYPE);
  }
  
  public void validateSecondaryAggregationType()
  {
    this.validateAttribute(SECONDARYAGGREGATIONTYPE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF getSecondaryAggregationTypeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeEnumerationDAOIF)mdClassIF.definesAttribute(SECONDARYAGGREGATIONTYPE);
  }
  
  public com.runwaysdk.system.metadata.MdAttribute getSecondaryAttribute()
  {
    if (getValue(SECONDARYATTRIBUTE).trim().equals(""))
    {
      return null;
    }
    else
    {
      return com.runwaysdk.system.metadata.MdAttribute.get(getValue(SECONDARYATTRIBUTE));
    }
  }
  
  public String getSecondaryAttributeId()
  {
    return getValue(SECONDARYATTRIBUTE);
  }
  
  public void validateSecondaryAttribute()
  {
    this.validateAttribute(SECONDARYATTRIBUTE);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF getSecondaryAttributeMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeReferenceDAOIF)mdClassIF.definesAttribute(SECONDARYATTRIBUTE);
  }
  
  public void setSecondaryAttribute(com.runwaysdk.system.metadata.MdAttribute value)
  {
    if(value == null)
    {
      setValue(SECONDARYATTRIBUTE, "");
    }
    else
    {
      setValue(SECONDARYATTRIBUTE, value.getOid());
    }
  }
  
  public String getSecondaryCategories()
  {
    return getValue(SECONDARYCATEGORIES);
  }
  
  public void validateSecondaryCategories()
  {
    this.validateAttribute(SECONDARYCATEGORIES);
  }
  
  public static com.runwaysdk.dataaccess.MdAttributeTextDAOIF getSecondaryCategoriesMd()
  {
    com.runwaysdk.dataaccess.MdClassDAOIF mdClassIF = com.runwaysdk.dataaccess.metadata.MdClassDAO.getMdClassDAO(net.geoprism.dashboard.DashboardThematicStyle.CLASS);
    return (com.runwaysdk.dataaccess.MdAttributeTextDAOIF)mdClassIF.definesAttribute(SECONDARYCATEGORIES);
  }
  
  public void setSecondaryCategories(String value)
  {
    if(value == null)
    {
      setValue(SECONDARYCATEGORIES, "");
    }
    else
    {
      setValue(SECONDARYCATEGORIES, value);
    }
  }
  
  protected String getDeclaredType()
  {
    return CLASS;
  }
  
  public static DashboardThematicStyleQuery getAllInstances(String sortAttribute, Boolean ascending, Integer pageSize, Integer pageNumber)
  {
    DashboardThematicStyleQuery query = new DashboardThematicStyleQuery(new com.runwaysdk.query.QueryFactory());
    com.runwaysdk.business.Entity.getAllInstances(query, sortAttribute, ascending, pageSize, pageNumber);
    return query;
  }
  
  public static DashboardThematicStyle get(String oid)
  {
    return (DashboardThematicStyle) com.runwaysdk.business.Business.get(oid);
  }
  
  public static DashboardThematicStyle getByKey(String key)
  {
    return (DashboardThematicStyle) com.runwaysdk.business.Business.get(CLASS, key);
  }
  
  public static DashboardThematicStyle lock(java.lang.String oid)
  {
    DashboardThematicStyle _instance = DashboardThematicStyle.get(oid);
    _instance.lock();
    
    return _instance;
  }
  
  public static DashboardThematicStyle unlock(java.lang.String oid)
  {
    DashboardThematicStyle _instance = DashboardThematicStyle.get(oid);
    _instance.unlock();
    
    return _instance;
  }
  
  public String toString()
  {
    if (this.isNew())
    {
      return "New: "+ this.getClassDisplayLabel();
    }
    else
    {
      return super.toString();
    }
  }
}

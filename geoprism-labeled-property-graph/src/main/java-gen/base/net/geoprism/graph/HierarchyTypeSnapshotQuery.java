package net.geoprism.graph;

@com.runwaysdk.business.ClassSignature(hash = 69445887)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to HierarchyTypeSnapshot.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class HierarchyTypeSnapshotQuery extends net.geoprism.graph.RelationshipTypeSnapshotQuery

{

  public HierarchyTypeSnapshotQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public HierarchyTypeSnapshotQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
    super(valueQuery);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return net.geoprism.graph.HierarchyTypeSnapshot.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getAccessConstraints()
  {
    return getAccessConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.ACCESSCONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.ACCESSCONSTRAINTS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getAcknowledgement()
  {
    return getAcknowledgement(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.ACKNOWLEDGEMENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.ACKNOWLEDGEMENT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCode()
  {
    return getCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.CODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.CODE, alias, displayLabel);

  }
  public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription()
  {
    return getDescription(null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION);

    return (net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION);

    return (net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getDisclaimer()
  {
    return getDisclaimer(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.DISCLAIMER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.DISCLAIMER, alias, displayLabel);

  }
  public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL);

    return (net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL);

    return (net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge()
  {
    return getGraphMdEdge(null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE);

    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE, mdAttributeIF, this, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE);

    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOrgCode()
  {
    return getOrgCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOrgCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.ORGCODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOrgCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.ORGCODE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProgress()
  {
    return getProgress(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.PROGRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.PROGRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSuperHierarchy()
  {
    return getSuperHierarchy(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSuperHierarchy(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.SUPERHIERARCHY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSuperHierarchy(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.SUPERHIERARCHY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUseConstraints()
  {
    return getUseConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.USECONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.graph.HierarchyTypeSnapshot.USECONSTRAINTS, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE)) 
    {
       return new com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION)) 
    {
       return new net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL)) 
    {
       return new net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.localFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends HierarchyTypeSnapshot> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<HierarchyTypeSnapshot>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface HierarchyTypeSnapshotQueryReferenceIF extends net.geoprism.graph.RelationshipTypeSnapshotQuery.RelationshipTypeSnapshotQueryReferenceIF
  {

    public com.runwaysdk.query.SelectableChar getAccessConstraints();
    public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias);
    public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getAcknowledgement();
    public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias);
    public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getCode();
    public com.runwaysdk.query.SelectableChar getCode(String alias);
    public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel);
    public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription();
    public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription(String alias);
    public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getDisclaimer();
    public com.runwaysdk.query.SelectableChar getDisclaimer(String alias);
    public com.runwaysdk.query.SelectableChar getDisclaimer(String alias, String displayLabel);
    public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel();
    public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge();
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge(String alias);
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getOrgCode();
    public com.runwaysdk.query.SelectableChar getOrgCode(String alias);
    public com.runwaysdk.query.SelectableChar getOrgCode(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getProgress();
    public com.runwaysdk.query.SelectableChar getProgress(String alias);
    public com.runwaysdk.query.SelectableChar getProgress(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSuperHierarchy();
    public com.runwaysdk.query.SelectableChar getSuperHierarchy(String alias);
    public com.runwaysdk.query.SelectableChar getSuperHierarchy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getUseConstraints();
    public com.runwaysdk.query.SelectableChar getUseConstraints(String alias);
    public com.runwaysdk.query.SelectableChar getUseConstraints(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(net.geoprism.graph.HierarchyTypeSnapshot hierarchyTypeSnapshot);

    public com.runwaysdk.query.BasicCondition NE(net.geoprism.graph.HierarchyTypeSnapshot hierarchyTypeSnapshot);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class HierarchyTypeSnapshotQueryReference extends net.geoprism.graph.RelationshipTypeSnapshotQuery.RelationshipTypeSnapshotQueryReference
 implements HierarchyTypeSnapshotQueryReferenceIF

  {

  public HierarchyTypeSnapshotQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(net.geoprism.graph.HierarchyTypeSnapshot hierarchyTypeSnapshot)
    {
      if(hierarchyTypeSnapshot == null) return this.EQ((java.lang.String)null);
      return this.EQ(hierarchyTypeSnapshot.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(net.geoprism.graph.HierarchyTypeSnapshot hierarchyTypeSnapshot)
    {
      if(hierarchyTypeSnapshot == null) return this.NE((java.lang.String)null);
      return this.NE(hierarchyTypeSnapshot.getOid());
    }

  public com.runwaysdk.query.SelectableChar getAccessConstraints()
  {
    return getAccessConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ACCESSCONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ACCESSCONSTRAINTS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getAcknowledgement()
  {
    return getAcknowledgement(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ACKNOWLEDGEMENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ACKNOWLEDGEMENT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCode()
  {
    return getCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.CODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.CODE, alias, displayLabel);

  }
  public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription()
  {
    return getDescription(null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription(String alias)
  {
    return (net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF)this.attributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription(String alias, String displayLabel)
  {
    return (net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF)this.attributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getDisclaimer()
  {
    return getDisclaimer(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.DISCLAIMER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.DISCLAIMER, alias, displayLabel);

  }
  public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge()
  {
    return getGraphMdEdge(null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge(String alias)
  {
    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.get(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.get(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOrgCode()
  {
    return getOrgCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOrgCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ORGCODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOrgCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ORGCODE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProgress()
  {
    return getProgress(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.PROGRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.PROGRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSuperHierarchy()
  {
    return getSuperHierarchy(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSuperHierarchy(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.SUPERHIERARCHY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSuperHierarchy(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.SUPERHIERARCHY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUseConstraints()
  {
    return getUseConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.USECONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.USECONSTRAINTS, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE)) 
    {
       return new com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION)) 
    {
       return new net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL)) 
    {
       return new net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.localFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface HierarchyTypeSnapshotQueryMultiReferenceIF extends net.geoprism.graph.RelationshipTypeSnapshotQuery.RelationshipTypeSnapshotQueryMultiReferenceIF
  {

    public com.runwaysdk.query.SelectableChar getAccessConstraints();
    public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias);
    public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getAcknowledgement();
    public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias);
    public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getCode();
    public com.runwaysdk.query.SelectableChar getCode(String alias);
    public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel);
    public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription();
    public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription(String alias);
    public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getDisclaimer();
    public com.runwaysdk.query.SelectableChar getDisclaimer(String alias);
    public com.runwaysdk.query.SelectableChar getDisclaimer(String alias, String displayLabel);
    public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel();
    public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel(String alias);
    public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel);
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge();
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge(String alias);
    public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getOrgCode();
    public com.runwaysdk.query.SelectableChar getOrgCode(String alias);
    public com.runwaysdk.query.SelectableChar getOrgCode(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getProgress();
    public com.runwaysdk.query.SelectableChar getProgress(String alias);
    public com.runwaysdk.query.SelectableChar getProgress(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getSuperHierarchy();
    public com.runwaysdk.query.SelectableChar getSuperHierarchy(String alias);
    public com.runwaysdk.query.SelectableChar getSuperHierarchy(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getUseConstraints();
    public com.runwaysdk.query.SelectableChar getUseConstraints(String alias);
    public com.runwaysdk.query.SelectableChar getUseConstraints(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(net.geoprism.graph.HierarchyTypeSnapshot ... hierarchyTypeSnapshot);
    public com.runwaysdk.query.Condition notContainsAny(net.geoprism.graph.HierarchyTypeSnapshot ... hierarchyTypeSnapshot);
    public com.runwaysdk.query.Condition containsAll(net.geoprism.graph.HierarchyTypeSnapshot ... hierarchyTypeSnapshot);
    public com.runwaysdk.query.Condition notContainsAll(net.geoprism.graph.HierarchyTypeSnapshot ... hierarchyTypeSnapshot);
    public com.runwaysdk.query.Condition containsExactly(net.geoprism.graph.HierarchyTypeSnapshot ... hierarchyTypeSnapshot);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class HierarchyTypeSnapshotQueryMultiReference extends net.geoprism.graph.RelationshipTypeSnapshotQuery.RelationshipTypeSnapshotQueryMultiReference
 implements HierarchyTypeSnapshotQueryMultiReferenceIF

  {

  public HierarchyTypeSnapshotQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(net.geoprism.graph.HierarchyTypeSnapshot ... hierarchyTypeSnapshot)  {

      String[] itemIdArray = new String[hierarchyTypeSnapshot.length]; 

      for (int i=0; i<hierarchyTypeSnapshot.length; i++)
      {
        itemIdArray[i] = hierarchyTypeSnapshot[i].getOid();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(net.geoprism.graph.HierarchyTypeSnapshot ... hierarchyTypeSnapshot)  {

      String[] itemIdArray = new String[hierarchyTypeSnapshot.length]; 

      for (int i=0; i<hierarchyTypeSnapshot.length; i++)
      {
        itemIdArray[i] = hierarchyTypeSnapshot[i].getOid();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(net.geoprism.graph.HierarchyTypeSnapshot ... hierarchyTypeSnapshot)  {

      String[] itemIdArray = new String[hierarchyTypeSnapshot.length]; 

      for (int i=0; i<hierarchyTypeSnapshot.length; i++)
      {
        itemIdArray[i] = hierarchyTypeSnapshot[i].getOid();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(net.geoprism.graph.HierarchyTypeSnapshot ... hierarchyTypeSnapshot)  {

      String[] itemIdArray = new String[hierarchyTypeSnapshot.length]; 

      for (int i=0; i<hierarchyTypeSnapshot.length; i++)
      {
        itemIdArray[i] = hierarchyTypeSnapshot[i].getOid();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(net.geoprism.graph.HierarchyTypeSnapshot ... hierarchyTypeSnapshot)  {

      String[] itemIdArray = new String[hierarchyTypeSnapshot.length]; 

      for (int i=0; i<hierarchyTypeSnapshot.length; i++)
      {
        itemIdArray[i] = hierarchyTypeSnapshot[i].getOid();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableChar getAccessConstraints()
  {
    return getAccessConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ACCESSCONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAccessConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ACCESSCONSTRAINTS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getAcknowledgement()
  {
    return getAcknowledgement(null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ACKNOWLEDGEMENT, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getAcknowledgement(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ACKNOWLEDGEMENT, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getCode()
  {
    return getCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.CODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.CODE, alias, displayLabel);

  }
  public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription()
  {
    return getDescription(null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription(String alias)
  {
    return (net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF)this.attributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF getDescription(String alias, String displayLabel)
  {
    return (net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStructIF)this.attributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION, com.runwaysdk.system.metadata.MdAttributeLocalText.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getDisclaimer()
  {
    return getDisclaimer(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.DISCLAIMER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisclaimer(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.DISCLAIMER, alias, displayLabel);

  }
  public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel()
  {
    return getDisplayLabel(null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel(String alias)
  {
    return (net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, null);

  }
 
  public net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF getDisplayLabel(String alias, String displayLabel)
  {
    return (net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStructIF)this.attributeFactory(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL, com.runwaysdk.system.metadata.MdAttributeLocalCharacter.CLASS, alias, displayLabel);

  }
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge()
  {
    return getGraphMdEdge(null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge(String alias)
  {
    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.get(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE, alias, null);

  }
 
  public com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF getGraphMdEdge(String alias, String displayLabel)
  {
    return (com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReferenceIF)this.get(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getOrgCode()
  {
    return getOrgCode(null);

  }
 
  public com.runwaysdk.query.SelectableChar getOrgCode(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ORGCODE, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getOrgCode(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.ORGCODE, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getProgress()
  {
    return getProgress(null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.PROGRESS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getProgress(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.PROGRESS, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getSuperHierarchy()
  {
    return getSuperHierarchy(null);

  }
 
  public com.runwaysdk.query.SelectableChar getSuperHierarchy(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.SUPERHIERARCHY, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getSuperHierarchy(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.SUPERHIERARCHY, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUseConstraints()
  {
    return getUseConstraints(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.USECONSTRAINTS, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUseConstraints(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.graph.HierarchyTypeSnapshot.USECONSTRAINTS, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.graph.HierarchyTypeSnapshot.GRAPHMDEDGE)) 
    {
       return new com.runwaysdk.system.metadata.MdEdgeQuery.MdEdgeQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  protected com.runwaysdk.query.AttributeLocal localFactory( com.runwaysdk.dataaccess.MdAttributeLocalDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdLocalStructDAOIF mdLocalStructIF, String structTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.graph.HierarchyTypeSnapshot.DESCRIPTION)) 
    {
       return new net.geoprism.graph.HierarchyTypeSnapshotDescriptionQuery.HierarchyTypeSnapshotDescriptionQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else if (name.equals(net.geoprism.graph.HierarchyTypeSnapshot.DISPLAYLABEL)) 
    {
       return new net.geoprism.graph.HierarchyTypeSnapshotDisplayLabelQuery.HierarchyTypeSnapshotDisplayLabelQueryStruct((com.runwaysdk.dataaccess.MdAttributeLocalDAOIF)mdAttributeIF,  attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.localFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdLocalStructIF, structTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }
}

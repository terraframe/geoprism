/**
 * Copyright (c) 2023 TerraFrame, Inc. All rights reserved.
 *
 * This file is part of Geoprism(tm).
 *
 * Geoprism(tm) is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Geoprism(tm) is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with Geoprism(tm).  If not, see <http://www.gnu.org/licenses/>.
 */
package net.geoprism.account;

@com.runwaysdk.business.ClassSignature(hash = -1163212773)
/**
 * This class is generated automatically.
 * DO NOT MAKE CHANGES TO IT - THEY WILL BE OVERWRITTEN
 * Custom business logic should be added to ExternalProfile.java
 *
 * @author Autogenerated by RunwaySDK
 */
public  class ExternalProfileQuery extends com.runwaysdk.system.SingleActorQuery

{

  public ExternalProfileQuery(com.runwaysdk.query.QueryFactory componentQueryFactory)
  {
    super(componentQueryFactory);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = componentQueryFactory.businessQuery(this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public ExternalProfileQuery(com.runwaysdk.query.ValueQuery valueQuery)
  {
    super(valueQuery);
    if (this.getComponentQuery() == null)
    {
      com.runwaysdk.business.BusinessQuery businessQuery = new com.runwaysdk.business.BusinessQuery(valueQuery, this.getClassType());

       this.setBusinessQuery(businessQuery);
    }
  }

  public String getClassType()
  {
    return net.geoprism.account.ExternalProfile.CLASS;
  }
  public com.runwaysdk.query.SelectableChar getDisplayName()
  {
    return getDisplayName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisplayName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.DISPLAYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisplayName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.DISPLAYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getEmail()
  {
    return getEmail(null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.EMAIL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.EMAIL, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getFirstName()
  {
    return getFirstName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getFirstName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.FIRSTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getFirstName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.FIRSTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getLastName()
  {
    return getLastName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getLastName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.LASTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getLastName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.LASTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPhoneNumber()
  {
    return getPhoneNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.PHONENUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.PHONENUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getRemoteId()
  {
    return getRemoteId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getRemoteId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.REMOTEID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getRemoteId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.REMOTEID, alias, displayLabel);

  }
  public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer()
  {
    return getServer(null);

  }
 
  public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer(String alias)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.account.ExternalProfile.SERVER);

    return (net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.account.ExternalProfile.SERVER, mdAttributeIF, this, alias, null);

  }
 
  public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer(String alias, String displayLabel)
  {

    com.runwaysdk.dataaccess.MdAttributeDAOIF mdAttributeIF = this.getComponentQuery().getMdAttributeROfromMap(net.geoprism.account.ExternalProfile.SERVER);

    return (net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF)this.getComponentQuery().internalAttributeFactory(net.geoprism.account.ExternalProfile.SERVER, mdAttributeIF, this, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUsername()
  {
    return getUsername(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.USERNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.getComponentQuery().get(net.geoprism.account.ExternalProfile.USERNAME, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.account.ExternalProfile.SERVER)) 
    {
       return new net.geoprism.account.OauthServerQuery.OauthServerQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  /**  
   * Returns an iterator of Business objects that match the query criteria specified
   * on this query object. 
   * @return iterator of Business objects that match the query criteria specified
   * on this query object.
   */
  public com.runwaysdk.query.OIterator<? extends ExternalProfile> getIterator()
  {
    this.checkNotUsedInValueQuery();
    String sqlStmt;
    if (_limit != null && _skip != null)
    {
      sqlStmt = this.getComponentQuery().getSQL(_limit, _skip);
    }
    else
    {
      sqlStmt = this.getComponentQuery().getSQL();
    }
    java.util.Map<String, com.runwaysdk.query.ColumnInfo> columnInfoMap = this.getComponentQuery().getColumnInfoMap();

    java.sql.ResultSet results = com.runwaysdk.dataaccess.database.Database.query(sqlStmt);
    return new com.runwaysdk.business.BusinessIterator<ExternalProfile>(this.getComponentQuery().getMdEntityIF(), columnInfoMap, results);
  }


/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface ExternalProfileQueryReferenceIF extends com.runwaysdk.system.SingleActorQuery.SingleActorQueryReferenceIF
  {

    public com.runwaysdk.query.SelectableChar getDisplayName();
    public com.runwaysdk.query.SelectableChar getDisplayName(String alias);
    public com.runwaysdk.query.SelectableChar getDisplayName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getEmail();
    public com.runwaysdk.query.SelectableChar getEmail(String alias);
    public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getFirstName();
    public com.runwaysdk.query.SelectableChar getFirstName(String alias);
    public com.runwaysdk.query.SelectableChar getFirstName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getLastName();
    public com.runwaysdk.query.SelectableChar getLastName(String alias);
    public com.runwaysdk.query.SelectableChar getLastName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getPhoneNumber();
    public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias);
    public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getRemoteId();
    public com.runwaysdk.query.SelectableChar getRemoteId(String alias);
    public com.runwaysdk.query.SelectableChar getRemoteId(String alias, String displayLabel);
    public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer();
    public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer(String alias);
    public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getUsername();
    public com.runwaysdk.query.SelectableChar getUsername(String alias);
    public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel);

    public com.runwaysdk.query.BasicCondition EQ(net.geoprism.account.ExternalProfile externalProfile);

    public com.runwaysdk.query.BasicCondition NE(net.geoprism.account.ExternalProfile externalProfile);

  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class ExternalProfileQueryReference extends com.runwaysdk.system.SingleActorQuery.SingleActorQueryReference
 implements ExternalProfileQueryReferenceIF

  {

  public ExternalProfileQueryReference(com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }


    public com.runwaysdk.query.BasicCondition EQ(net.geoprism.account.ExternalProfile externalProfile)
    {
      if(externalProfile == null) return this.EQ((java.lang.String)null);
      return this.EQ(externalProfile.getOid());
    }

    public com.runwaysdk.query.BasicCondition NE(net.geoprism.account.ExternalProfile externalProfile)
    {
      if(externalProfile == null) return this.NE((java.lang.String)null);
      return this.NE(externalProfile.getOid());
    }

  public com.runwaysdk.query.SelectableChar getDisplayName()
  {
    return getDisplayName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisplayName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.DISPLAYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisplayName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.DISPLAYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getEmail()
  {
    return getEmail(null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.EMAIL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.EMAIL, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getFirstName()
  {
    return getFirstName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getFirstName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.FIRSTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getFirstName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.FIRSTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getLastName()
  {
    return getLastName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getLastName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.LASTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getLastName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.LASTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPhoneNumber()
  {
    return getPhoneNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.PHONENUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.PHONENUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getRemoteId()
  {
    return getRemoteId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getRemoteId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.REMOTEID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getRemoteId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.REMOTEID, alias, displayLabel);

  }
  public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer()
  {
    return getServer(null);

  }
 
  public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer(String alias)
  {
    return (net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF)this.get(net.geoprism.account.ExternalProfile.SERVER, alias, null);

  }
 
  public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer(String alias, String displayLabel)
  {
    return (net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF)this.get(net.geoprism.account.ExternalProfile.SERVER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUsername()
  {
    return getUsername(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.USERNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.USERNAME, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.account.ExternalProfile.SERVER)) 
    {
       return new net.geoprism.account.OauthServerQuery.OauthServerQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }

/**
 * Interface that masks all type unsafe query methods and defines all type safe methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public interface ExternalProfileQueryMultiReferenceIF extends com.runwaysdk.system.SingleActorQuery.SingleActorQueryMultiReferenceIF
  {

    public com.runwaysdk.query.SelectableChar getDisplayName();
    public com.runwaysdk.query.SelectableChar getDisplayName(String alias);
    public com.runwaysdk.query.SelectableChar getDisplayName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getEmail();
    public com.runwaysdk.query.SelectableChar getEmail(String alias);
    public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getFirstName();
    public com.runwaysdk.query.SelectableChar getFirstName(String alias);
    public com.runwaysdk.query.SelectableChar getFirstName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getLastName();
    public com.runwaysdk.query.SelectableChar getLastName(String alias);
    public com.runwaysdk.query.SelectableChar getLastName(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getPhoneNumber();
    public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias);
    public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getRemoteId();
    public com.runwaysdk.query.SelectableChar getRemoteId(String alias);
    public com.runwaysdk.query.SelectableChar getRemoteId(String alias, String displayLabel);
    public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer();
    public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer(String alias);
    public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer(String alias, String displayLabel);
    public com.runwaysdk.query.SelectableChar getUsername();
    public com.runwaysdk.query.SelectableChar getUsername(String alias);
    public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel);

    public com.runwaysdk.query.Condition containsAny(net.geoprism.account.ExternalProfile ... externalProfile);
    public com.runwaysdk.query.Condition notContainsAny(net.geoprism.account.ExternalProfile ... externalProfile);
    public com.runwaysdk.query.Condition containsAll(net.geoprism.account.ExternalProfile ... externalProfile);
    public com.runwaysdk.query.Condition notContainsAll(net.geoprism.account.ExternalProfile ... externalProfile);
    public com.runwaysdk.query.Condition containsExactly(net.geoprism.account.ExternalProfile ... externalProfile);
  }

/**
 * Implements type safe query methods.
 * This type is used when a join is performed on this class as a reference.
 **/
  public static class ExternalProfileQueryMultiReference extends com.runwaysdk.system.SingleActorQuery.SingleActorQueryMultiReference
 implements ExternalProfileQueryMultiReferenceIF

  {

  public ExternalProfileQueryMultiReference(com.runwaysdk.dataaccess.MdAttributeMultiReferenceDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias, String mdMultiReferenceTableName, com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String alias, String displayLabel)
  {
    super(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, mdMultiReferenceTableName, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, alias, displayLabel);

  }



    public com.runwaysdk.query.Condition containsAny(net.geoprism.account.ExternalProfile ... externalProfile)  {

      String[] itemIdArray = new String[externalProfile.length]; 

      for (int i=0; i<externalProfile.length; i++)
      {
        itemIdArray[i] = externalProfile[i].getOid();
      }

      return this.containsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAny(net.geoprism.account.ExternalProfile ... externalProfile)  {

      String[] itemIdArray = new String[externalProfile.length]; 

      for (int i=0; i<externalProfile.length; i++)
      {
        itemIdArray[i] = externalProfile[i].getOid();
      }

      return this.notContainsAny(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsAll(net.geoprism.account.ExternalProfile ... externalProfile)  {

      String[] itemIdArray = new String[externalProfile.length]; 

      for (int i=0; i<externalProfile.length; i++)
      {
        itemIdArray[i] = externalProfile[i].getOid();
      }

      return this.containsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition notContainsAll(net.geoprism.account.ExternalProfile ... externalProfile)  {

      String[] itemIdArray = new String[externalProfile.length]; 

      for (int i=0; i<externalProfile.length; i++)
      {
        itemIdArray[i] = externalProfile[i].getOid();
      }

      return this.notContainsAll(itemIdArray);
  }

    public com.runwaysdk.query.Condition containsExactly(net.geoprism.account.ExternalProfile ... externalProfile)  {

      String[] itemIdArray = new String[externalProfile.length]; 

      for (int i=0; i<externalProfile.length; i++)
      {
        itemIdArray[i] = externalProfile[i].getOid();
      }

      return this.containsExactly(itemIdArray);
  }
  public com.runwaysdk.query.SelectableChar getDisplayName()
  {
    return getDisplayName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisplayName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.DISPLAYNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getDisplayName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.DISPLAYNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getEmail()
  {
    return getEmail(null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.EMAIL, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getEmail(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.EMAIL, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getFirstName()
  {
    return getFirstName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getFirstName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.FIRSTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getFirstName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.FIRSTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getLastName()
  {
    return getLastName(null);

  }
 
  public com.runwaysdk.query.SelectableChar getLastName(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.LASTNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getLastName(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.LASTNAME, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getPhoneNumber()
  {
    return getPhoneNumber(null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.PHONENUMBER, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getPhoneNumber(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.PHONENUMBER, alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getRemoteId()
  {
    return getRemoteId(null);

  }
 
  public com.runwaysdk.query.SelectableChar getRemoteId(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.REMOTEID, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getRemoteId(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.REMOTEID, alias, displayLabel);

  }
  public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer()
  {
    return getServer(null);

  }
 
  public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer(String alias)
  {
    return (net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF)this.get(net.geoprism.account.ExternalProfile.SERVER, alias, null);

  }
 
  public net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF getServer(String alias, String displayLabel)
  {
    return (net.geoprism.account.OauthServerQuery.OauthServerQueryReferenceIF)this.get(net.geoprism.account.ExternalProfile.SERVER,  alias, displayLabel);

  }
  public com.runwaysdk.query.SelectableChar getUsername()
  {
    return getUsername(null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.USERNAME, alias, null);

  }
 
  public com.runwaysdk.query.SelectableChar getUsername(String alias, String displayLabel)
  {
    return (com.runwaysdk.query.SelectableChar)this.get(net.geoprism.account.ExternalProfile.USERNAME, alias, displayLabel);

  }
  protected com.runwaysdk.query.AttributeReference referenceFactory( com.runwaysdk.dataaccess.MdAttributeRefDAOIF mdAttributeIF, String attributeNamespace, String definingTableName, String definingTableAlias,  com.runwaysdk.dataaccess.MdBusinessDAOIF referenceMdBusinessIF, String referenceTableAlias, com.runwaysdk.query.ComponentQuery rootQuery, java.util.Set<com.runwaysdk.query.Join> tableJoinSet, String userDefinedAlias, String userDefinedDisplayLabel)
  {
    String name = mdAttributeIF.definesAttribute();
    
    if (name.equals(net.geoprism.account.ExternalProfile.SERVER)) 
    {
       return new net.geoprism.account.OauthServerQuery.OauthServerQueryReference((com.runwaysdk.dataaccess.MdAttributeRefDAOIF)mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
    else 
    {
      return super.referenceFactory(mdAttributeIF, attributeNamespace, definingTableName, definingTableAlias, referenceMdBusinessIF, referenceTableAlias, rootQuery, tableJoinSet, userDefinedAlias, userDefinedDisplayLabel);
    }
  }

  }
}
